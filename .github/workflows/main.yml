name: CI/CD

on: [push]

jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.17.0'
      - name: Cache npm modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.17.0'
      - name: Cache npm modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run generate
        env:
          NODE_ENV: production
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      - uses: actions/upload-artifact@v2
        with:
          name: .nuxt
          path: .nuxt
  deploy:
    runs-on: ubuntu-18.04
    needs: [test, build]
    steps:
      - uses: actions/checkout@v2
        if: github.ref == 'refs/heads/master'
        with:
          fetch-depth: 1
      - uses: actions/download-artifact@v2
        if: github.ref == 'refs/heads/master'
        with:
          name: build
          path: build
      - uses: ./.github/actions/deploy
        if: github.ref == 'refs/heads/master'
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          GIT_URL: git@github.com:sugarshin/sugarshin.net.git
          BRANCH: gh-pages
          GITHUB_SHA: ${{ github.sha }}
          BUILD: build
      - name: Refresh screen capture
        if: github.ref == 'refs/heads/master' && success()
        run: |
          curl -XGET "https://api.apiflash.com/v1/urltoimage?access_key=${APIFLASH_ACCESS_KEY}&url=https://sugarshin.net&width=854&height=505&format=png&fresh=true" -I
        env:
          APIFLASH_ACCESS_KEY: ${{ secrets.APIFLASH_ACCESS_KEY }}
